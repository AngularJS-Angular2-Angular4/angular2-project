# EMBEDDED SERVER CONFIGURATION
server:
    port: ${port:8080}
    context-path: /
    error.whitelabel.enabled: false
    compression:
      enabled: true
      min-response-size: 1024
      mime-types: text/html, text/xml, text/plain, text/css, application/javascript, application/json

spring:
    aop:
        proxyTargetClass: true

# EUREKA
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
# ZULL
zuul:
  routes:
     product-service:
          sensitiveHeaders:
          path: /api/product-service/**
          stripPrefix: true
     address-service:
          sensitiveHeaders:
          path: /api/address-service/**
          stripPrefix: true
     notification-service:
          sensitiveHeaders:
          path: /api/notification-service/**
          stripPrefix: true
     user-service:
          sensitiveHeaders:
          path: /auth/**
          stripPrefix: false
  add-proxy-headers: true

---

spring:
  profiles: docker

# EUREKA
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8081/eureka/

# ZULL
zuul:
  routes:
     user-service:
          url: http://${eureka.instance.hostname}:8083
     product-service:
          url: http://${eureka.instance.hostname}:8082
     address-service:
          url: http://${eureka.instance.hostname}:8085
     notification-service:
          url: http://${eureka.instance.hostname}:8086

---

spring:
  profiles: standalone

# EUREKA
eureka:
  instance:
    hostname: localhost
    port: 8081
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/

# ZULL
zuul:
  routes:
     user-service:
          url: http://${eureka.instance.hostname}:8083
     product-service:
          url: http://${eureka.instance.hostname}:8082
     address-service:
          url: http://${eureka.instance.hostname}:8085
     notification-service:
          url: http://${eureka.instance.hostname}:8086
